buildscript {
    ext {
        springBootVersion = '2.2.5.RELEASE'
    }
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/plugins-release" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath "org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}"
        classpath "org.springframework.build.gradle:propdeps-plugin:0.0.7"
        classpath "io.spring.gradle:dependency-management-plugin:1.0.7.RELEASE"
        //classpath "io.swagger:swagger-codegen:2.3.1"
        classpath 'org.owasp:dependency-check-gradle:5.3.1'
        classpath "gradle.plugin.com.gorylenko.gradle-git-properties:gradle-git-properties:2.2.2"
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'org.owasp.dependencycheck'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'com.telekom.whatsapp'
version = '0.0.2'
description = 'Webhook API for managing WA Biz API'
defaultTasks 'bootRun'

repositories {
    maven { 
        // "/" after maven-central is necessary!
        url 'http://localhost:8081/repository/maven-central/' 
        credentials {
            username "admin"
            password "admin"
        }
    }
    maven { url 'https://maven-central.storage.googleapis.com' }
    jcenter()
    mavenCentral()
}

dependencies {
    implementation ('org.springframework.boot:spring-boot-starter-actuator')
    implementation ('org.springframework.boot:spring-boot-starter-aop')
    implementation ("org.springframework.boot:spring-boot-starter-data-jpa")
    implementation ('org.springframework.boot:spring-boot-starter-web')
    implementation ('org.springframework.boot:spring-boot-starter-security')
    implementation (group: 'io.jsonwebtoken', name: 'jjwt', version: '0.9.1')
    //implementation ("org.springframework.boot:spring-boot-starter-cache")
    //implementation ('org.springframework.security:spring-security-data')

    runtimeOnly ('mysql:mysql-connector-java')
    runtimeOnly ('org.springframework.boot:spring-boot-devtools')
    
    testImplementation ('org.springframework.security:spring-security-test')
    testImplementation ('junit:junit:4.12')
    testRuntimeOnly ('com.h2database:h2')
}


springBoot {
    mainClassName = 'com.telekom.whatsapp.webhook.Application'
}


sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
    }
}

// ADD SOME INFO TO THE /INFO ENDPOINT PROVIDED BY ACTUATOR

apply plugin: 'com.gorylenko.gradle-git-properties'

processResources {
    filesMatching("**/application.yml") {
        expand( project.properties )
    }
}

// PUBLISHING TO PRIVATE NEXUS REPOSITORY

apply plugin: 'maven-publish'

publishing {
    println "Archives Artifacts: "
    configurations.archives.allArtifacts.each { artifact ->
        println artifact.file
    }

    publications {
        maven(MavenPublication) {
            artifact("build/libs/webhook-$version"+".jar") {
                extension 'jar'
            }
        }
    }
    repositories {
       maven {
            name = "releases"
            url "http://localhost:8081/repository/maven-releases"
            credentials {
                username "admin"
                password "admin"
            }
       }
    }
}